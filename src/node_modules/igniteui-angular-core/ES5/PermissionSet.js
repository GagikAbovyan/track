import * as tslib_1 from "tslib";
import { Base, markType } from "./type";
var PermissionSet = /** @class */ (function (_super) {
    tslib_1.__extends(PermissionSet, _super);
    function PermissionSet(a) {
        var _rest = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            _rest[_i - 1] = arguments[_i];
        }
        var _this = _super.call(this) || this;
        a = (a == void 0) ? 0 : a;
        switch (a) {
            case 0: break;
            case 1:
                {
                    var c = _rest[0];
                }
                break;
            case 2:
                {
                    var c = _rest[0];
                }
                break;
        }
        return _this;
    }
    PermissionSet.prototype.b = function (a) {
        return a;
    };
    PermissionSet.prototype.a = function () {
        return true;
    };
    PermissionSet.prototype.c = function (a) {
        return new PermissionSet(0);
    };
    PermissionSet.$t = markType(PermissionSet, 'PermissionSet');
    return PermissionSet;
}(Base));
export { PermissionSet };
//# sourceMappingURL=PermissionSet.js.map