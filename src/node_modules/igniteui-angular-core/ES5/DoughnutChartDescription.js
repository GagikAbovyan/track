/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import * as tslib_1 from "tslib";
import { Description } from "./Description";
import { markType } from "./type";
var DoughnutChartDescription = /** @class */ (function (_super) {
    tslib_1.__extends(DoughnutChartDescription, _super);
    function DoughnutChartDescription() {
        var _this = _super.call(this) || this;
        _this.g = false;
        _this.h = false;
        _this.f = false;
        _this.m = 0;
        _this.v = null;
        _this.w = null;
        _this.p = 0;
        _this.o = 0;
        _this.n = 0;
        _this.l = 0;
        _this._SliceClickRef = null;
        _this._HoleDimensionsChangedRef = null;
        return _this;
    }
    DoughnutChartDescription.prototype.get_type = function () {
        return "DoughnutChart";
    };
    Object.defineProperty(DoughnutChartDescription.prototype, "type", {
        get: function () {
            return this.get_type();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DoughnutChartDescription.prototype, "allowSliceSelection", {
        get: function () {
            return this.g;
        },
        set: function (a) {
            this.g = a;
            this.e("AllowSliceSelection");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DoughnutChartDescription.prototype, "isSurfaceInteractionDisabled", {
        get: function () {
            return this.h;
        },
        set: function (a) {
            this.h = a;
            this.e("IsSurfaceInteractionDisabled");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DoughnutChartDescription.prototype, "allowSliceExplosion", {
        get: function () {
            return this.f;
        },
        set: function (a) {
            this.f = a;
            this.e("AllowSliceExplosion");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DoughnutChartDescription.prototype, "innerExtent", {
        get: function () {
            return this.m;
        },
        set: function (a) {
            this.m = a;
            this.e("InnerExtent");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DoughnutChartDescription.prototype, "selectedSliceFill", {
        get: function () {
            return this.v;
        },
        set: function (a) {
            this.v = a;
            this.e("SelectedSliceFill");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DoughnutChartDescription.prototype, "selectedSliceStroke", {
        get: function () {
            return this.w;
        },
        set: function (a) {
            this.w = a;
            this.e("SelectedSliceStroke");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DoughnutChartDescription.prototype, "selectedSliceStrokeThickness", {
        get: function () {
            return this.p;
        },
        set: function (a) {
            this.p = a;
            this.e("SelectedSliceStrokeThickness");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DoughnutChartDescription.prototype, "selectedSliceOpacity", {
        get: function () {
            return this.o;
        },
        set: function (a) {
            this.o = a;
            this.e("SelectedSliceOpacity");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DoughnutChartDescription.prototype, "pixelScalingRatio", {
        get: function () {
            return this.n;
        },
        set: function (a) {
            this.n = a;
            this.e("PixelScalingRatio");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DoughnutChartDescription.prototype, "actualPixelScalingRatio", {
        get: function () {
            return this.l;
        },
        set: function (a) {
            this.l = a;
            this.e("ActualPixelScalingRatio");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DoughnutChartDescription.prototype, "SliceClickRef", {
        get: function () {
            return this._SliceClickRef;
        },
        set: function (a) {
            this._SliceClickRef = a;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DoughnutChartDescription.prototype, "HoleDimensionsChangedRef", {
        get: function () {
            return this._HoleDimensionsChangedRef;
        },
        set: function (a) {
            this._HoleDimensionsChangedRef = a;
        },
        enumerable: true,
        configurable: true
    });
    DoughnutChartDescription.$t = markType(DoughnutChartDescription, 'DoughnutChartDescription', Description.$);
    return DoughnutChartDescription;
}(Description));
export { DoughnutChartDescription };
//# sourceMappingURL=DoughnutChartDescription.js.map