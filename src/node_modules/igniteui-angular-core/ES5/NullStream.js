//
// System.IO.StreamWriter.cs
//
// Authors:
//   Dietmar Maurer (dietmar@ximian.com)
//   Paolo Molaro (lupus@ximian.com)
//
// (C) Ximian, Inc.  http://www.ximian.com
//
import * as tslib_1 from "tslib";
import { Stream, markType } from "./type";
var NullStream = /** @class */ (function (_super) {
    tslib_1.__extends(NullStream, _super);
    function NullStream() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    NullStream.prototype.get_canRead = function () {
        return true;
    };
    Object.defineProperty(NullStream.prototype, "canRead", {
        get: function () {
            return this.get_canRead();
        },
        enumerable: true,
        configurable: true
    });
    NullStream.prototype.get_canSeek = function () {
        return true;
    };
    Object.defineProperty(NullStream.prototype, "canSeek", {
        get: function () {
            return this.get_canSeek();
        },
        enumerable: true,
        configurable: true
    });
    NullStream.prototype.get_canWrite = function () {
        return true;
    };
    Object.defineProperty(NullStream.prototype, "canWrite", {
        get: function () {
            return this.get_canWrite();
        },
        enumerable: true,
        configurable: true
    });
    NullStream.prototype.get_length = function () {
        return 0;
    };
    Object.defineProperty(NullStream.prototype, "length", {
        get: function () {
            return this.get_length();
        },
        enumerable: true,
        configurable: true
    });
    NullStream.prototype.get_position = function () {
        return 0;
    };
    NullStream.prototype.set_position = function (a) {
    };
    Object.defineProperty(NullStream.prototype, "position", {
        get: function () {
            return this.get_position();
        },
        set: function (a) {
            this.set_position(a);
        },
        enumerable: true,
        configurable: true
    });
    NullStream.prototype.flush = function () {
    };
    NullStream.prototype.read = function (a, b, c) {
        return 0;
    };
    NullStream.prototype.readByte = function () {
        return -1;
    };
    NullStream.prototype.seek = function (a, b) {
        return 0;
    };
    NullStream.prototype.setLength = function (a) {
    };
    NullStream.prototype.write = function (a, b, c) {
    };
    NullStream.prototype.writeByte = function (a) {
    };
    NullStream.$t = markType(NullStream, 'NullStream', Stream.$);
    return NullStream;
}(Stream));
export { NullStream };
//# sourceMappingURL=NullStream.js.map