import { Description } from "./Description";
import { Type } from "./type";
export declare abstract class AxisDescription extends Description {
    static $t: Type;
    protected get_type(): string;
    readonly type: string;
    constructor();
    private a7;
    formatLabelRef: string;
    private bk;
    title: string;
    private bi;
    stroke: string;
    private a3;
    actualStroke: string;
    private z;
    strokeThickness: number;
    private bh;
    strip: string;
    private bf;
    majorStroke: string;
    private a1;
    actualMajorStroke: string;
    private x;
    majorStrokeThickness: number;
    private bg;
    minorStroke: string;
    private a2;
    actualMinorStroke: string;
    private y;
    minorStrokeThickness: number;
    private bj;
    tickStroke: string;
    private ab;
    tickStrokeThickness: number;
    private aa;
    tickLength: number;
    private g;
    isDisabled: boolean;
    private h;
    isInverted: boolean;
    private k;
    useEnhancedIntervalManagement: boolean;
    private az;
    enhancedIntervalMinimumCharacters: number;
    private bc;
    labelTextStyle: string;
    private bb;
    labelTextColor: string;
    private ba;
    labelLocation: string;
    private be;
    labelVisibility: string;
    private i;
    labelShowFirstLabel: boolean;
    private r;
    labelAngle: number;
    private t;
    labelExtent: number;
    private u;
    labelLeftMargin: number;
    private v;
    labelRightMargin: number;
    private w;
    labelTopMargin: number;
    private s;
    labelBottomMargin: number;
    private a9;
    labelHorizontalAlignment: string;
    private bd;
    labelVerticalAlignment: string;
    private a5;
    crossingAxisRef: string;
    private a6;
    crossingValueRef: string;
    private bn;
    titlePosition: string;
    private bp;
    titleTextStyle: string;
    private bo;
    titleTextColor: string;
    private bm;
    titleLocation: string;
    private br;
    titleVisibility: string;
    private j;
    titleShowFirstLabel: boolean;
    private ac;
    titleAngle: number;
    private ae;
    titleExtent: number;
    private af;
    titleLeftMargin: number;
    private ag;
    titleRightMargin: number;
    private ah;
    titleTopMargin: number;
    private ad;
    titleBottomMargin: number;
    private bl;
    titleHorizontalAlignment: string;
    private bq;
    titleVerticalAlignment: string;
    private a4;
    coercionMethodsRef: string;
    private f;
    expectFunctions: boolean;
    private _RangeChangedRef;
    RangeChangedRef: string;
    private _RenderRequestedRef;
    RenderRequestedRef: string;
    private a8;
    label: string;
}
