/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import * as tslib_1 from "tslib";
import { Description } from "./Description";
import { markType } from "./type";
var DefinitionBaseDescription = /** @class */ (function (_super) {
    tslib_1.__extends(DefinitionBaseDescription, _super);
    function DefinitionBaseDescription() {
        var _this = _super.call(this) || this;
        _this.s = null;
        _this.m = null;
        _this.x = null;
        _this.q = null;
        _this.w = null;
        _this.p = null;
        _this.u = null;
        _this.n = null;
        _this.g = 0;
        _this.t = null;
        _this.z = null;
        _this.v = null;
        _this.o = null;
        _this.y = null;
        _this.r = null;
        _this.h = 0;
        _this.f = 0;
        _this._fontFamily = null;
        _this._fontSize = 0;
        _this._fontStyle = null;
        _this._DataBindingRef = null;
        _this._DataBoundRef = null;
        _this._CellStyleKeyRequestedRef = null;
        return _this;
    }
    DefinitionBaseDescription.prototype.get_type = function () {
        return "DefinitionBase";
    };
    Object.defineProperty(DefinitionBaseDescription.prototype, "type", {
        get: function () {
            return this.get_type();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DefinitionBaseDescription.prototype, "background", {
        get: function () {
            return this.s;
        },
        set: function (a) {
            this.s = a;
            this.e("Background");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DefinitionBaseDescription.prototype, "actualBackground", {
        get: function () {
            return this.m;
        },
        set: function (a) {
            this.m = a;
            this.e("ActualBackground");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DefinitionBaseDescription.prototype, "stickyRowBackground", {
        get: function () {
            return this.x;
        },
        set: function (a) {
            this.x = a;
            this.e("StickyRowBackground");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DefinitionBaseDescription.prototype, "actualStickyRowBackground", {
        get: function () {
            return this.q;
        },
        set: function (a) {
            this.q = a;
            this.e("ActualStickyRowBackground");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DefinitionBaseDescription.prototype, "pinnedRowBackground", {
        get: function () {
            return this.w;
        },
        set: function (a) {
            this.w = a;
            this.e("PinnedRowBackground");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DefinitionBaseDescription.prototype, "actualPinnedRowBackground", {
        get: function () {
            return this.p;
        },
        set: function (a) {
            this.p = a;
            this.e("ActualPinnedRowBackground");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DefinitionBaseDescription.prototype, "lastStickyRowBackground", {
        get: function () {
            return this.u;
        },
        set: function (a) {
            this.u = a;
            this.e("LastStickyRowBackground");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DefinitionBaseDescription.prototype, "actualLastStickyRowBackground", {
        get: function () {
            return this.n;
        },
        set: function (a) {
            this.n = a;
            this.e("ActualLastStickyRowBackground");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DefinitionBaseDescription.prototype, "contentOpacity", {
        get: function () {
            return this.g;
        },
        set: function (a) {
            this.g = a;
            this.e("ContentOpacity");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DefinitionBaseDescription.prototype, "horizontalAlignment", {
        get: function () {
            return this.t;
        },
        set: function (a) {
            this.t = a;
            this.e("HorizontalAlignment");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DefinitionBaseDescription.prototype, "verticalAlignment", {
        get: function () {
            return this.z;
        },
        set: function (a) {
            this.z = a;
            this.e("VerticalAlignment");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DefinitionBaseDescription.prototype, "lineBreakMode", {
        get: function () {
            return this.v;
        },
        set: function (a) {
            this.v = a;
            this.e("LineBreakMode");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DefinitionBaseDescription.prototype, "actualLineBreakMode", {
        get: function () {
            return this.o;
        },
        set: function (a) {
            this.o = a;
            this.e("ActualLineBreakMode");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DefinitionBaseDescription.prototype, "textColor", {
        get: function () {
            return this.y;
        },
        set: function (a) {
            this.y = a;
            this.e("TextColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DefinitionBaseDescription.prototype, "actualTextColor", {
        get: function () {
            return this.r;
        },
        set: function (a) {
            this.r = a;
            this.e("ActualTextColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DefinitionBaseDescription.prototype, "pinnedRowOpacity", {
        get: function () {
            return this.h;
        },
        set: function (a) {
            this.h = a;
            this.e("PinnedRowOpacity");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DefinitionBaseDescription.prototype, "actualPinnedRowOpacity", {
        get: function () {
            return this.f;
        },
        set: function (a) {
            this.f = a;
            this.e("ActualPinnedRowOpacity");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DefinitionBaseDescription.prototype, "fontFamily", {
        get: function () {
            return this._fontFamily;
        },
        set: function (a) {
            this._fontFamily = a;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DefinitionBaseDescription.prototype, "fontSize", {
        get: function () {
            return this._fontSize;
        },
        set: function (a) {
            this._fontSize = a;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DefinitionBaseDescription.prototype, "fontStyle", {
        get: function () {
            return this._fontStyle;
        },
        set: function (a) {
            this._fontStyle = a;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DefinitionBaseDescription.prototype, "DataBindingRef", {
        get: function () {
            return this._DataBindingRef;
        },
        set: function (a) {
            this._DataBindingRef = a;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DefinitionBaseDescription.prototype, "DataBoundRef", {
        get: function () {
            return this._DataBoundRef;
        },
        set: function (a) {
            this._DataBoundRef = a;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DefinitionBaseDescription.prototype, "CellStyleKeyRequestedRef", {
        get: function () {
            return this._CellStyleKeyRequestedRef;
        },
        set: function (a) {
            this._CellStyleKeyRequestedRef = a;
        },
        enumerable: true,
        configurable: true
    });
    DefinitionBaseDescription.$t = markType(DefinitionBaseDescription, 'DefinitionBaseDescription', Description.$);
    return DefinitionBaseDescription;
}(Description));
export { DefinitionBaseDescription };
//# sourceMappingURL=DefinitionBaseDescription.js.map