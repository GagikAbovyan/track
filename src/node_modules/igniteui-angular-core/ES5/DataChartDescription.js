/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import * as tslib_1 from "tslib";
import { SeriesViewerDescription } from "./SeriesViewerDescription";
import { markType } from "./type";
var DataChartDescription = /** @class */ (function (_super) {
    tslib_1.__extends(DataChartDescription, _super);
    function DataChartDescription() {
        var _this = _super.call(this) || this;
        _this.dj = false;
        _this.dw = 0;
        _this.dx = 0;
        _this.dq = 0;
        _this.dr = 0;
        _this.di = false;
        _this.dk = false;
        _this.d9 = null;
        _this.dh = false;
        _this.c8 = null;
        _this.c9 = null;
        _this.db = null;
        _this.da = null;
        _this.d8 = null;
        _this.d6 = null;
        _this.d7 = null;
        _this.dt = 0;
        _this.dv = 0;
        _this.du = 0;
        _this.ds = 0;
        _this.c7 = null;
        _this.eb = null;
        _this.ea = null;
        return _this;
    }
    DataChartDescription.prototype.get_type = function () {
        return "DataChart";
    };
    Object.defineProperty(DataChartDescription.prototype, "isSquare", {
        get: function () {
            return this.dj;
        },
        set: function (a) {
            this.dj = a;
            this.e("IsSquare");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataChartDescription.prototype, "windowScaleHorizontal", {
        get: function () {
            return this.dw;
        },
        set: function (a) {
            this.dw = a;
            this.e("WindowScaleHorizontal");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataChartDescription.prototype, "windowScaleVertical", {
        get: function () {
            return this.dx;
        },
        set: function (a) {
            this.dx = a;
            this.e("WindowScaleVertical");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataChartDescription.prototype, "actualWindowScaleHorizontal", {
        get: function () {
            return this.dq;
        },
        set: function (a) {
            this.dq = a;
            this.e("ActualWindowScaleHorizontal");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataChartDescription.prototype, "actualWindowScaleVertical", {
        get: function () {
            return this.dr;
        },
        set: function (a) {
            this.dr = a;
            this.e("ActualWindowScaleVertical");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataChartDescription.prototype, "isHorizontalZoomEnabled", {
        get: function () {
            return this.di;
        },
        set: function (a) {
            this.di = a;
            this.e("IsHorizontalZoomEnabled");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataChartDescription.prototype, "isVerticalZoomEnabled", {
        get: function () {
            return this.dk;
        },
        set: function (a) {
            this.dk = a;
            this.e("IsVerticalZoomEnabled");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataChartDescription.prototype, "gridMode", {
        get: function () {
            return this.d9;
        },
        set: function (a) {
            this.d9 = a;
            this.e("GridMode");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataChartDescription.prototype, "alignsGridLinesToPixels", {
        get: function () {
            return this.dh;
        },
        set: function (a) {
            this.dh = a;
            this.e("AlignsGridLinesToPixels");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataChartDescription.prototype, "brushes", {
        get: function () {
            return this.c8;
        },
        set: function (a) {
            this.c8 = a;
            this.e("Brushes");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataChartDescription.prototype, "markerBrushes", {
        get: function () {
            return this.c9;
        },
        set: function (a) {
            this.c9 = a;
            this.e("MarkerBrushes");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataChartDescription.prototype, "outlines", {
        get: function () {
            return this.db;
        },
        set: function (a) {
            this.db = a;
            this.e("Outlines");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataChartDescription.prototype, "markerOutlines", {
        get: function () {
            return this.da;
        },
        set: function (a) {
            this.da = a;
            this.e("MarkerOutlines");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataChartDescription.prototype, "defaultAxisStroke", {
        get: function () {
            return this.d8;
        },
        set: function (a) {
            this.d8 = a;
            this.e("DefaultAxisStroke");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataChartDescription.prototype, "defaultAxisMajorStroke", {
        get: function () {
            return this.d6;
        },
        set: function (a) {
            this.d6 = a;
            this.e("DefaultAxisMajorStroke");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataChartDescription.prototype, "defaultAxisMinorStroke", {
        get: function () {
            return this.d7;
        },
        set: function (a) {
            this.d7 = a;
            this.e("DefaultAxisMinorStroke");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataChartDescription.prototype, "plotAreaMarginLeft", {
        get: function () {
            return this.dt;
        },
        set: function (a) {
            this.dt = a;
            this.e("PlotAreaMarginLeft");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataChartDescription.prototype, "plotAreaMarginTop", {
        get: function () {
            return this.dv;
        },
        set: function (a) {
            this.dv = a;
            this.e("PlotAreaMarginTop");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataChartDescription.prototype, "plotAreaMarginRight", {
        get: function () {
            return this.du;
        },
        set: function (a) {
            this.du = a;
            this.e("PlotAreaMarginRight");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataChartDescription.prototype, "plotAreaMarginBottom", {
        get: function () {
            return this.ds;
        },
        set: function (a) {
            this.ds = a;
            this.e("PlotAreaMarginBottom");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataChartDescription.prototype, "axes", {
        get: function () {
            return this.c7;
        },
        set: function (a) {
            this.c7 = a;
            this.e("Axes");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataChartDescription.prototype, "width", {
        get: function () {
            return this.eb;
        },
        set: function (a) {
            this.eb = a;
            this.e("Width");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataChartDescription.prototype, "height", {
        get: function () {
            return this.ea;
        },
        set: function (a) {
            this.ea = a;
            this.e("Height");
        },
        enumerable: true,
        configurable: true
    });
    DataChartDescription.$t = markType(DataChartDescription, 'DataChartDescription', SeriesViewerDescription.$);
    return DataChartDescription;
}(SeriesViewerDescription));
export { DataChartDescription };
//# sourceMappingURL=DataChartDescription.js.map