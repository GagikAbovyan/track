/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import * as tslib_1 from "tslib";
import { XYChartDescription } from "./XYChartDescription";
import { markType } from "./type";
var FinancialChartDescription = /** @class */ (function (_super) {
    tslib_1.__extends(FinancialChartDescription, _super);
    function FinancialChartDescription() {
        var _this = _super.call(this) || this;
        _this.h5 = 0;
        _this.hl = false;
        _this.h8 = 0;
        _this.hr = false;
        _this.iy = 0;
        _this.ia = 0;
        _this.ic = 0;
        _this.ib = 0;
        _this.id = 0;
        _this.i6 = null;
        _this.i7 = null;
        _this.ja = null;
        _this.hn = false;
        _this.i5 = null;
        _this.i8 = null;
        _this.hp = false;
        _this.gz = null;
        _this.g4 = null;
        _this.hq = false;
        _this.h7 = 0;
        _this.i9 = null;
        _this.jb = null;
        _this.g0 = null;
        _this.g1 = null;
        _this.g2 = null;
        _this.g3 = null;
        _this.g7 = null;
        _this.g6 = null;
        _this.gy = null;
        _this.gw = null;
        _this.h9 = 0;
        _this.h6 = 0;
        _this.h4 = 0;
        _this.gx = null;
        _this.iu = 0;
        _this.h3 = 0;
        _this.ix = 0;
        _this.iv = 0;
        _this.it = 0;
        _this.iw = 0;
        _this.g5 = null;
        _this.gv = null;
        _this.ho = false;
        _this.jc = null;
        _this.ie = 0;
        _this.hm = false;
        _this.h0 = new Date();
        _this.hz = new Date();
        _this._ApplyCustomIndicatorsRef = null;
        return _this;
    }
    FinancialChartDescription.prototype.get_type = function () {
        return "FinancialChart";
    };
    Object.defineProperty(FinancialChartDescription.prototype, "leftMargin", {
        get: function () {
            return this.h5;
        },
        set: function (a) {
            this.h5 = a;
            this.e("LeftMargin");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "isHorizontalZoomEnabled", {
        get: function () {
            return this.hl;
        },
        set: function (a) {
            this.hl = a;
            this.e("IsHorizontalZoomEnabled");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "toolbarHeight", {
        get: function () {
            return this.h8;
        },
        set: function (a) {
            this.h8 = a;
            this.e("ToolbarHeight");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "yAxisIsLogarithmic", {
        get: function () {
            return this.hr;
        },
        set: function (a) {
            this.hr = a;
            this.e("YAxisIsLogarithmic");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "yAxisLogarithmBase", {
        get: function () {
            return this.iy;
        },
        set: function (a) {
            this.iy = a;
            this.e("YAxisLogarithmBase");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "yAxisInterval", {
        get: function () {
            return this.ia;
        },
        set: function (a) {
            this.ia = a;
            this.e("YAxisInterval");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "yAxisMinimumValue", {
        get: function () {
            return this.ic;
        },
        set: function (a) {
            this.ic = a;
            this.e("YAxisMinimumValue");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "yAxisMaximumValue", {
        get: function () {
            return this.ib;
        },
        set: function (a) {
            this.ib = a;
            this.e("YAxisMaximumValue");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "yAxisMinorInterval", {
        get: function () {
            return this.id;
        },
        set: function (a) {
            this.id = a;
            this.e("YAxisMinorInterval");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "volumeType", {
        get: function () {
            return this.i6;
        },
        set: function (a) {
            this.i6 = a;
            this.e("VolumeType");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "xAxisMode", {
        get: function () {
            return this.i7;
        },
        set: function (a) {
            this.i7 = a;
            this.e("XAxisMode");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "yAxisMode", {
        get: function () {
            return this.ja;
        },
        set: function (a) {
            this.ja = a;
            this.e("YAxisMode");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "isToolbarVisible", {
        get: function () {
            return this.hn;
        },
        set: function (a) {
            this.hn = a;
            this.e("IsToolbarVisible");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "chartType", {
        get: function () {
            return this.i5;
        },
        set: function (a) {
            this.i5 = a;
            this.e("ChartType");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "yAxisLabelHorizontalAlignment", {
        get: function () {
            return this.i8;
        },
        set: function (a) {
            this.i8 = a;
            this.e("YAxisLabelHorizontalAlignment");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "isWindowSyncedToVisibleRange", {
        get: function () {
            return this.hp;
        },
        set: function (a) {
            this.hp = a;
            this.e("IsWindowSyncedToVisibleRange");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "indicatorTypes", {
        get: function () {
            return this.gz;
        },
        set: function (a) {
            this.gz = a;
            this.e("IndicatorTypes");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "overlayTypes", {
        get: function () {
            return this.g4;
        },
        set: function (a) {
            this.g4 = a;
            this.e("OverlayTypes");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "yAxisAbbreviateLargeNumbers", {
        get: function () {
            return this.hq;
        },
        set: function (a) {
            this.hq = a;
            this.e("YAxisAbbreviateLargeNumbers");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "resolution", {
        get: function () {
            return this.h7;
        },
        set: function (a) {
            this.h7 = a;
            this.e("Resolution");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "yAxisLabelLocation", {
        get: function () {
            return this.i9;
        },
        set: function (a) {
            this.i9 = a;
            this.e("YAxisLabelLocation");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "zoomSliderType", {
        get: function () {
            return this.jb;
        },
        set: function (a) {
            this.jb = a;
            this.e("ZoomSliderType");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "negativeBrushes", {
        get: function () {
            return this.g0;
        },
        set: function (a) {
            this.g0 = a;
            this.e("NegativeBrushes");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "negativeOutlines", {
        get: function () {
            return this.g1;
        },
        set: function (a) {
            this.g1 = a;
            this.e("NegativeOutlines");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "overlayBrushes", {
        get: function () {
            return this.g2;
        },
        set: function (a) {
            this.g2 = a;
            this.e("OverlayBrushes");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "overlayOutlines", {
        get: function () {
            return this.g3;
        },
        set: function (a) {
            this.g3 = a;
            this.e("OverlayOutlines");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "volumeOutlines", {
        get: function () {
            return this.g7;
        },
        set: function (a) {
            this.g7 = a;
            this.e("VolumeOutlines");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "volumeBrushes", {
        get: function () {
            return this.g6;
        },
        set: function (a) {
            this.g6 = a;
            this.e("VolumeBrushes");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "indicatorNegativeBrushes", {
        get: function () {
            return this.gy;
        },
        set: function (a) {
            this.gy = a;
            this.e("IndicatorNegativeBrushes");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "indicatorBrushes", {
        get: function () {
            return this.gw;
        },
        set: function (a) {
            this.gw = a;
            this.e("IndicatorBrushes");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "volumeThickness", {
        get: function () {
            return this.h9;
        },
        set: function (a) {
            this.h9 = a;
            this.e("VolumeThickness");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "overlayThickness", {
        get: function () {
            return this.h6;
        },
        set: function (a) {
            this.h6 = a;
            this.e("OverlayThickness");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "indicatorThickness", {
        get: function () {
            return this.h4;
        },
        set: function (a) {
            this.h4 = a;
            this.e("IndicatorThickness");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "indicatorDisplayTypes", {
        get: function () {
            return this.gx;
        },
        set: function (a) {
            this.gx = a;
            this.e("IndicatorDisplayTypes");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "indicatorPeriod", {
        get: function () {
            return this.iu;
        },
        set: function (a) {
            this.iu = a;
            this.e("IndicatorPeriod");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "indicatorMultiplier", {
        get: function () {
            return this.h3;
        },
        set: function (a) {
            this.h3 = a;
            this.e("IndicatorMultiplier");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "indicatorSmoothingPeriod", {
        get: function () {
            return this.ix;
        },
        set: function (a) {
            this.ix = a;
            this.e("IndicatorSmoothingPeriod");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "indicatorShortPeriod", {
        get: function () {
            return this.iv;
        },
        set: function (a) {
            this.iv = a;
            this.e("IndicatorShortPeriod");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "indicatorLongPeriod", {
        get: function () {
            return this.it;
        },
        set: function (a) {
            this.it = a;
            this.e("IndicatorLongPeriod");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "indicatorSignalPeriod", {
        get: function () {
            return this.iw;
        },
        set: function (a) {
            this.iw = a;
            this.e("IndicatorSignalPeriod");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "rangeSelectorOptions", {
        get: function () {
            return this.g5;
        },
        set: function (a) {
            this.g5 = a;
            this.e("RangeSelectorOptions");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "customIndicatorNames", {
        get: function () {
            return this.gv;
        },
        set: function (a) {
            this.gv = a;
            this.e("CustomIndicatorNames");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "isVerticalZoomEnabled", {
        get: function () {
            return this.ho;
        },
        set: function (a) {
            this.ho = a;
            this.e("IsVerticalZoomEnabled");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "zoomSliderXAxisMajorStroke", {
        get: function () {
            return this.jc;
        },
        set: function (a) {
            this.jc = a;
            this.e("ZoomSliderXAxisMajorStroke");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "zoomSliderXAxisMajorStrokeThickness", {
        get: function () {
            return this.ie;
        },
        set: function (a) {
            this.ie = a;
            this.e("ZoomSliderXAxisMajorStrokeThickness");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "isLegendVisible", {
        get: function () {
            return this.hm;
        },
        set: function (a) {
            this.hm = a;
            this.e("IsLegendVisible");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "xAxisMinimumValue", {
        get: function () {
            return this.h0;
        },
        set: function (a) {
            this.h0 = a;
            this.e("XAxisMinimumValue");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "xAxisMaximumValue", {
        get: function () {
            return this.hz;
        },
        set: function (a) {
            this.hz = a;
            this.e("XAxisMaximumValue");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "ApplyCustomIndicatorsRef", {
        get: function () {
            return this._ApplyCustomIndicatorsRef;
        },
        set: function (a) {
            this._ApplyCustomIndicatorsRef = a;
        },
        enumerable: true,
        configurable: true
    });
    FinancialChartDescription.$t = markType(FinancialChartDescription, 'FinancialChartDescription', XYChartDescription.$);
    return FinancialChartDescription;
}(XYChartDescription));
export { FinancialChartDescription };
//# sourceMappingURL=FinancialChartDescription.js.map