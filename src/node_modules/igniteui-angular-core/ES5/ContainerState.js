/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import * as tslib_1 from "tslib";
import { Base, Number_$type, String_$type, fromEnum, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { DescriptionRef } from "./DescriptionRef";
import { List$1 } from "./List$1";
var ContainerState = /** @class */ (function (_super) {
    tslib_1.__extends(ContainerState, _super);
    function ContainerState() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.l = null;
        _this.f = new Dictionary$2(Number_$type, Base.$, 0);
        _this.g = new Dictionary$2(Base.$, Number_$type, 0);
        _this.e = new Dictionary$2(Number_$type, String_$type, 0);
        _this.h = new Dictionary$2(String_$type, DescriptionRef.$, 0);
        _this.i = new Dictionary$2(String_$type, Base.$, 0);
        _this.j = new Dictionary$2(String_$type, Base.$, 0);
        return _this;
    }
    ContainerState.prototype.o = function (a, b, c) {
        if (c.b("Name")) {
            this.e.item(a, c.a("Name").b);
            this.q(this.e.item(a), b, false);
        }
        this.f.item(a, b);
        this.g.item(b, a);
    };
    ContainerState.prototype.m = function (a) {
        return this.f.item(a);
    };
    ContainerState.prototype.r = function (a) {
        var b = this.f.item(a);
        this.g.removeItem(b);
        this.f.removeItem(a);
        if (this.e.containsKey(a)) {
            var c = this.e.item(a);
            this.e.removeItem(a);
            this.s(c, false);
        }
    };
    ContainerState.prototype.a = function (a) {
        if (this.h.containsKey(a)) {
            var b = this.h.item(a);
            return b;
        }
        var c = new DescriptionRef(a);
        this.h.addItem(a, c);
        return c;
    };
    ContainerState.prototype.k = function (a) {
        if (this.g.containsKey(a)) {
            return this.g.item(a);
        }
        return -1;
    };
    ContainerState.prototype.q = function (a, b, c) {
        var d = null;
        if (c) {
            if (this.j.containsKey(a)) {
                d = this.j.item(a);
            }
            this.j.item(a, b);
        }
        else {
            if (this.i.containsKey(a)) {
                d = this.i.item(a);
            }
            this.i.item(a, b);
        }
        if (this.h.containsKey(a)) {
            this.h.item(a).e(d, b);
        }
    };
    ContainerState.prototype.s = function (a, b) {
        var c = null;
        if (b) {
            if (this.j.containsKey(a)) {
                c = this.j.item(a);
            }
            this.j.removeItem(a);
        }
        else {
            if (this.i.containsKey(a)) {
                c = this.i.item(a);
            }
            this.i.removeItem(a);
        }
        if (this.h.containsKey(a)) {
            this.h.item(a).e(c, this.n(this.h.item(a)));
            if (this.h.item(a).b <= 0) {
                this.h.removeItem(a);
            }
        }
    };
    ContainerState.prototype.p = function () {
        var a = new List$1(String_$type, 0);
        try {
            for (var _a = tslib_1.__values(fromEnum(this.j.keys)), _b = _a.next(); !_b.done; _b = _a.next()) {
                var b = _b.value;
                a.add(b);
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_b && !_b.done && (_c = _a.return)) _c.call(_a);
            }
            finally { if (e_1) throw e_1.error; }
        }
        try {
            for (var _d = tslib_1.__values(fromEnum(a)), _e = _d.next(); !_e.done; _e = _d.next()) {
                var c = _e.value;
                this.s(c, true);
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (_e && !_e.done && (_f = _d.return)) _f.call(_d);
            }
            finally { if (e_2) throw e_2.error; }
        }
        var e_1, _c, e_2, _f;
    };
    ContainerState.prototype.d = function (a) {
        return this.j.containsKey(a.d) || this.i.containsKey(a.d);
    };
    ContainerState.prototype.n = function (a) {
        if (this.j.containsKey(a.d)) {
            return this.j.item(a.d);
        }
        if (this.i.containsKey(a.d)) {
            return this.i.item(a.d);
        }
        return null;
    };
    ContainerState.prototype.c = function (a) {
        return this.h.containsKey(a);
    };
    ContainerState.prototype.b = function (a) {
        return this.h.item(a);
    };
    ContainerState.$t = markType(ContainerState, 'ContainerState');
    return ContainerState;
}(Base));
export { ContainerState };
//# sourceMappingURL=ContainerState.js.map