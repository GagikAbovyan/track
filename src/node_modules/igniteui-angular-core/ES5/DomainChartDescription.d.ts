import { Description } from "./Description";
import { RectDescription } from "./RectDescription";
import { Type } from "./type";
export declare abstract class DomainChartDescription extends Description {
    static $t: Type;
    protected get_type(): string;
    readonly type: string;
    constructor();
    private at;
    pixelScalingRatio: number;
    private a2;
    titleLeftMargin: number;
    private a3;
    titleRightMargin: number;
    private a4;
    titleTopMargin: number;
    private a1;
    titleBottomMargin: number;
    private ax;
    subtitleLeftMargin: number;
    private az;
    subtitleTopMargin: number;
    private ay;
    subtitleRightMargin: number;
    private aw;
    subtitleBottomMargin: number;
    private b1;
    subtitleTextColor: string;
    private b4;
    titleTextColor: string;
    private as;
    leftMargin: number;
    private a5;
    topMargin: number;
    private av;
    rightMargin: number;
    private ar;
    bottomMargin: number;
    private bo;
    transitionDuration: number;
    private b7;
    transitionEasingFunctionRef: string;
    private b2;
    subtitleTextStyle: string;
    private b5;
    titleTextStyle: string;
    private h;
    includedProperties: string[];
    private g;
    excludedProperties: string[];
    private f;
    brushes: string[];
    private l;
    outlines: string[];
    private ae;
    isHorizontalZoomEnabled: boolean;
    private ag;
    isVerticalZoomEnabled: boolean;
    private af;
    isSeriesHighlightingEnabled: boolean;
    private v;
    windowRect: RectDescription;
    private bx;
    chartTitle: string;
    private bz;
    subtitle: string;
    private b3;
    titleAlignment: string;
    private b0;
    subtitleAlignment: string;
    private b9;
    unknownValuePlotting: string;
    private au;
    resolution: number;
    private a0;
    thickness: number;
    private k;
    markerTypes: string[];
    private i;
    markerBrushes: string[];
    private j;
    markerOutlines: string[];
    private bn;
    markerMaxCount: number;
    private y;
    animateSeriesWhenAxisRangeChanges: boolean;
    private m;
    trendLineBrushes: string[];
    private b8;
    trendLineType: string;
    private a6;
    trendLineThickness: number;
    private x;
    alignsGridLinesToPixels: boolean;
    private bp;
    trendLinePeriod: number;
    private b6;
    toolTipType: string;
    private by;
    crosshairsDisplayMode: string;
    private ac;
    crosshairsSnapToData: boolean;
    private ab;
    crosshairsAnnotationEnabled: boolean;
    private ad;
    finalValueAnnotationsVisible: boolean;
    private aa;
    calloutsVisible: boolean;
    private z;
    calloutStyleUpdatingEventEnabled: boolean;
    private bv;
    calloutsXMemberPath: string;
    private bw;
    calloutsYMemberPath: string;
    private bu;
    calloutsLabelMemberPath: string;
    private bt;
    calloutsContentMemberPath: string;
    private _SeriesAddedRef;
    SeriesAddedRef: string;
    private _SeriesRemovedRef;
    SeriesRemovedRef: string;
    private _SeriesPointerEnterRef;
    SeriesPointerEnterRef: string;
    private _SeriesPointerLeaveRef;
    SeriesPointerLeaveRef: string;
    private _SeriesPointerMoveRef;
    SeriesPointerMoveRef: string;
    private _SeriesPointerDownRef;
    SeriesPointerDownRef: string;
    private _SeriesPointerUpRef;
    SeriesPointerUpRef: string;
    private _CalloutStyleUpdatingRef;
    CalloutStyleUpdatingRef: string;
}
