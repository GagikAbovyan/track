/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Injector, ComponentFactoryResolver, Component, Renderer2, ViewChild, Inject, NgZone, ChangeDetectionStrategy, ViewContainerRef } from '@angular/core';
import { DOCUMENT } from '@angular/platform-browser';
var IgxComponentRendererContainerComponent = /** @class */ (function () {
    function IgxComponentRendererContainerComponent(_renderer, _document, _elRef, _ngZone, _componentFactoryResolver, _injector) {
        this._renderer = _renderer;
        this._document = _document;
        this._elRef = _elRef;
        this._ngZone = _ngZone;
        this._componentFactoryResolver = _componentFactoryResolver;
        this._injector = _injector;
        this.listeners = [];
        this._currentRoot = null;
        this._currentRootRef = null;
    }
    IgxComponentRendererContainerComponent.prototype.replaceRootItem = function (t, continueActions) {
        if (this._currentRoot != null) {
            this._currentRoot;
        }
        var cf = this._componentFactoryResolver.resolveComponentFactory(t);
        var cr = this._dynamicContent.createComponent(cf);
        this._currentRootRef = cr;
        this._currentRoot = cr.instance;
    };
    IgxComponentRendererContainerComponent.prototype.clearContainer = function (continueActions) {
        if (this._currentRootRef) {
            this._currentRootRef.destroy();
            this._currentRootRef = null;
            this._currentRoot = null;
        }
    };
    IgxComponentRendererContainerComponent.prototype.getRootObject = function () {
        return this._currentRoot;
    };
    IgxComponentRendererContainerComponent.decorators = [
        { type: Component, args: [{
                    selector: 'igx-component-renderer-container',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    template: "\n    <ng-container #dynamicContent></ng-container>\n  ",
                    styles: ["\n  :host {\n    display: block;\n  }"]
                },] },
    ];
    /** @nocollapse */
    IgxComponentRendererContainerComponent.ctorParameters = function () { return [
        { type: Renderer2, },
        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] },] },
        { type: ViewContainerRef, },
        { type: NgZone, },
        { type: ComponentFactoryResolver, },
        { type: Injector, },
    ]; };
    IgxComponentRendererContainerComponent.propDecorators = {
        "_dynamicContent": [{ type: ViewChild, args: ["dynamicContent", { read: ViewContainerRef },] },],
    };
    return IgxComponentRendererContainerComponent;
}());
export { IgxComponentRendererContainerComponent };
//# sourceMappingURL=igx-component-renderer-container-component.js.map