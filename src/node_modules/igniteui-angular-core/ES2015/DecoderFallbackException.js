//
// DecoderFallbackException.cs
//
// Author:
//	Atsushi Enomoto <atsushi@ximian.com>
//
import { ArgumentException } from "./ArgumentException";
import { markType } from "./type";
export class DecoderFallbackException extends ArgumentException {
    constructor(a, ..._rest) {
        a = (a == void 0) ? 0 : a;
        switch (a) {
            case 0:
                {
                    let c = [null];
                    {
                        let e = c[0];
                        super(1, e);
                        this.c = null;
                        this.e = -1;
                    }
                }
                break;
            case 1:
                {
                    let c = _rest[0];
                    super(1, c);
                    this.c = null;
                    this.e = -1;
                }
                break;
            case 2:
                {
                    let c = _rest[0];
                    let d = _rest[1];
                    super(3, c, d);
                    this.c = null;
                    this.e = -1;
                }
                break;
            case 3:
                {
                    let c = _rest[0];
                    let d = _rest[1];
                    let e = _rest[2];
                    super(1, c);
                    this.c = null;
                    this.e = -1;
                    this.c = d;
                    this.e = e;
                }
                break;
        }
    }
    get bytesUnknown() {
        return this.c;
    }
    get index() {
        return this.e;
    }
}
DecoderFallbackException.$t = markType(DecoderFallbackException, 'DecoderFallbackException', ArgumentException.$);
//# sourceMappingURL=DecoderFallbackException.js.map