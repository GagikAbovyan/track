/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { AxisDescription } from "./AxisDescription";
import { markType } from "./type";
export class CategoryAxisBaseDescription extends AxisDescription {
    constructor() {
        super();
        this.cs = 0;
        this.co = 0;
        this.cp = 0;
        this.cm = false;
        this.cu = null;
    }
    get_type() {
        return "CategoryAxisBase";
    }
    get itemsCount() {
        return this.cs;
    }
    set itemsCount(a) {
        this.cs = a;
        this.e("ItemsCount");
    }
    get gap() {
        return this.co;
    }
    set gap(a) {
        this.co = a;
        this.e("Gap");
    }
    get overlap() {
        return this.cp;
    }
    set overlap(a) {
        this.cp = a;
        this.e("Overlap");
    }
    get useClusteringMode() {
        return this.cm;
    }
    set useClusteringMode(a) {
        this.cm = a;
        this.e("UseClusteringMode");
    }
    get dataSourceRef() {
        return this.cu;
    }
    set dataSourceRef(a) {
        this.cu = a;
        this.e("DataSourceRef");
    }
}
CategoryAxisBaseDescription.$t = markType(CategoryAxisBaseDescription, 'CategoryAxisBaseDescription', AxisDescription.$);
//# sourceMappingURL=CategoryAxisBaseDescription.js.map