import { BaseError, markType } from "./type";
export class XmlException extends BaseError {
    constructor(a, ..._rest) {
        a = (a == void 0) ? 0 : a;
        switch (a) {
            case 0:
                {
                    super(0);
                    this.d = 0;
                    this.f = 0;
                    this.i = null;
                    this.h = null;
                    this.c = null;
                    this.h = "Xml_DefaultException";
                    this.c = new Array(1);
                }
                break;
            case 1:
                {
                    let c = _rest[0];
                    let d = _rest[1];
                    super(2, c, d);
                    this.d = 0;
                    this.f = 0;
                    this.i = null;
                    this.h = null;
                    this.c = null;
                    this.h = "Xml_UserException";
                    this.c = [c];
                }
                break;
            case 2:
                {
                    let c = _rest[0];
                    let d = _rest[1];
                    let e = _rest[2];
                    super(0);
                    this.d = 0;
                    this.f = 0;
                    this.i = null;
                    this.h = null;
                    this.c = null;
                }
                break;
            case 3:
                {
                    let c = _rest[0];
                    super(1, c);
                    this.d = 0;
                    this.f = 0;
                    this.i = null;
                    this.h = null;
                    this.c = null;
                    this.h = "Xml_UserException";
                    this.c = [c];
                }
                break;
            case 4:
                {
                    let c = _rest[0];
                    let d = _rest[1];
                    let e = _rest[2];
                    let f = _rest[3];
                    let g = [c, d];
                    {
                        let i = g[0];
                        let j = g[1];
                        super(2, i, j);
                        this.d = 0;
                        this.f = 0;
                        this.i = null;
                        this.h = null;
                        this.c = null;
                        this.h = "Xml_UserException";
                        this.c = [i];
                    }
                    this.d = e;
                    this.f = f;
                }
                break;
        }
    }
    get lineNumber() {
        return this.d;
    }
    get linePosition() {
        return this.f;
    }
}
XmlException.$t = markType(XmlException, 'XmlException', BaseError.$);
//# sourceMappingURL=XmlException.js.map