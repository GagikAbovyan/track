/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { PropertyUpdatedEventArgsDescriptionMetadata } from "./PropertyUpdatedEventArgsDescriptionMetadata";
export class RingSeriesBaseDescriptionMetadata extends Base {
    static b(a) {
        if (RingSeriesBaseDescriptionMetadata.a == null) {
            RingSeriesBaseDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            RingSeriesBaseDescriptionMetadata.c(a, RingSeriesBaseDescriptionMetadata.a);
            PropertyUpdatedEventArgsDescriptionMetadata.d(a);
        }
    }
    static c(a, b) {
        b.item("ValueMemberPath", "String");
        b.item("LabelMemberPath", "String");
        b.item("LegendLabelMemberPath", "String");
        b.item("LabelsPosition", "ExportedType:string:LabelsPosition");
        b.item("LeaderLineVisibility", "ExportedType:string:Visibility");
        b.item("LeaderLineFill", "(w:LeaderLineStyle.Fill)String");
        b.item("LeaderLineStroke", "(w:LeaderLineStyle.Stroke)String");
        b.item("LeaderLineStrokeThickness", "(w:LeaderLineStyle.StrokeThickness)Number:double");
        b.item("LeaderLineOpacity", "(w:LeaderLineStyle.Opacity)Number:double");
        b.item("LeaderLineType", "ExportedType:string:LeaderLineType");
        b.item("LeaderLineMargin", "Number:double");
        b.item("OthersCategoryThreshold", "Number:double");
        b.item("OthersCategoryType", "ExportedType:string:OthersCategoryType");
        b.item("OthersCategoryText", "String");
        b.item("FormatLabelRef", "(w:FormatLabel)MethodRef");
        b.item("FormatLegendLabelRef", "(w:FormatLegendLabel)MethodRef");
        b.item("LabelExtent", "Number:double");
        b.item("StartAngle", "Number:double");
        b.item("SelectedSliceFill", "(w:SelectedStyle.Fill)String");
        b.item("SelectedSliceStroke", "(w:SelectedStyle.Stroke)String");
        b.item("SelectedSliceStrokeThickness", "(w:SelectedStyle.StrokeThickness)Number:double");
        b.item("SelectedSliceOpacity", "(w:SelectedStyle.Opacity)Number:double");
        b.item("Brushes", "BrushCollection:string");
        b.item("Outlines", "BrushCollection:string");
        b.item("IsSurfaceInteractionDisabled", "Boolean");
        b.item("RadiusFactor", "Number:double");
        b.item("PropertyUpdatedRef", "EventRef::propertyUpdated");
    }
    static d(a) {
        RingSeriesBaseDescriptionMetadata.b(a);
        a.m("RingSeriesBase", RingSeriesBaseDescriptionMetadata.a);
    }
}
RingSeriesBaseDescriptionMetadata.$t = markType(RingSeriesBaseDescriptionMetadata, 'RingSeriesBaseDescriptionMetadata');
RingSeriesBaseDescriptionMetadata.a = null;
//# sourceMappingURL=RingSeriesBaseDescriptionMetadata.js.map