/**
 * Represents an element in the current sort applied to a data source or provider. Changes to this object are not observed or expected after it is initially assigned to a collection.
*/
export class SortDescription {
    get i() {
        return this._implementation;
    }
    onImplementationCreated() {
    }
    constructor() {
    }
    _provideImplementation(i) {
        this._implementation = i;
        this._implementation.externalObject = this;
        this.onImplementationCreated();
    }
    /**
         * Gets or sets the property being sorted.
        */
    get propertyName() {
        return this.i.propertyName;
    }
    set propertyName(v) {
        this.i.propertyName = v;
    }
    /**
         * Gets or sets the direction to sort based on the property.
        */
    get direction() {
        return this.i.direction;
    }
    set direction(v) {
        this.i.direction = v;
    }
    /**
         * Returns if the SortDescription is equal to another.
        
        * @param other  * The SortDescription to compare to.
        */
    equals(other) {
        let iv = this.i.equals(other);
        return (iv);
    }
    /**
         * Returns the hash code for the SortDescription.
        
        */
    getHashCode() {
        let iv = this.i.getHashCode();
        return (iv);
    }
}
//# sourceMappingURL=igx-sort-description.js.map