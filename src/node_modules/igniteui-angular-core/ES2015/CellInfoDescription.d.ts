import { Description } from "./Description";
import { CellActionManagerDescriptionDescription } from "./CellActionManagerDescriptionDescription";
import { Type } from "./type";
export declare abstract class CellInfoDescription extends Description {
    static $t: Type;
    protected get_type(): string;
    readonly type: string;
    constructor();
    private bo;
    styleKey: string;
    private au;
    dataRow: number;
    private m;
    isPositionDirty: boolean;
    private q;
    isSizeDirty: boolean;
    private h;
    isContentDirty: boolean;
    private k;
    isLayerDirty: boolean;
    private r;
    isStateDirty: boolean;
    private i;
    isDataDirty: boolean;
    private l;
    isPlaceholdContentNeeded: boolean;
    private f;
    actionManager: CellActionManagerDescriptionDescription;
    private n;
    isRowPinned: boolean;
    private o;
    isRowSticky: boolean;
    private j;
    isLastStickyRow: boolean;
    private bk;
    rowItemRef: string;
    private aj;
    x: number;
    private ak;
    y: number;
    private a0;
    snappedX: number;
    private a1;
    snappedY: number;
    private ae;
    contentOpacity: number;
    private af;
    opacity: number;
    private ad;
    actualOpacity: number;
    private av;
    height: number;
    private a2;
    width: number;
    private p;
    isSelected: boolean;
    private ah;
    selectedStatus: number;
    private be;
    horizontalAlignment: string;
    private bq;
    verticalAlignment: string;
    private bd;
    background: string;
    private bc;
    actualBackground: string;
    private bl;
    selectedBackground: string;
    private bn;
    stickyRowBackground: string;
    private bi;
    pinnedRowBackground: string;
    private bf;
    lastStickyRowBackground: string;
    private ag;
    pinnedRowOpacity: number;
    private bh;
    originalValueRef: string;
    private bj;
    renderValue: string;
    private bp;
    textColor: string;
    private _fontFamily;
    fontFamily: string;
    private _fontSize;
    fontSize: number;
    private _fontStyle;
    fontStyle: string;
    private bg;
    lineBreakMode: string;
    private ai;
    virtualizationPercentage: number;
    private ax;
    paddingLeft: number;
    private az;
    paddingTop: number;
    private ay;
    paddingRight: number;
    private aw;
    paddingBottom: number;
    private bm;
    sortDirection: string;
}
