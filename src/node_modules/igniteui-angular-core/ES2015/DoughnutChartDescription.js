/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Description } from "./Description";
import { markType } from "./type";
export class DoughnutChartDescription extends Description {
    constructor() {
        super();
        this.g = false;
        this.h = false;
        this.f = false;
        this.m = 0;
        this.v = null;
        this.w = null;
        this.p = 0;
        this.o = 0;
        this.n = 0;
        this.l = 0;
        this._SliceClickRef = null;
        this._HoleDimensionsChangedRef = null;
    }
    get_type() {
        return "DoughnutChart";
    }
    get type() {
        return this.get_type();
    }
    get allowSliceSelection() {
        return this.g;
    }
    set allowSliceSelection(a) {
        this.g = a;
        this.e("AllowSliceSelection");
    }
    get isSurfaceInteractionDisabled() {
        return this.h;
    }
    set isSurfaceInteractionDisabled(a) {
        this.h = a;
        this.e("IsSurfaceInteractionDisabled");
    }
    get allowSliceExplosion() {
        return this.f;
    }
    set allowSliceExplosion(a) {
        this.f = a;
        this.e("AllowSliceExplosion");
    }
    get innerExtent() {
        return this.m;
    }
    set innerExtent(a) {
        this.m = a;
        this.e("InnerExtent");
    }
    get selectedSliceFill() {
        return this.v;
    }
    set selectedSliceFill(a) {
        this.v = a;
        this.e("SelectedSliceFill");
    }
    get selectedSliceStroke() {
        return this.w;
    }
    set selectedSliceStroke(a) {
        this.w = a;
        this.e("SelectedSliceStroke");
    }
    get selectedSliceStrokeThickness() {
        return this.p;
    }
    set selectedSliceStrokeThickness(a) {
        this.p = a;
        this.e("SelectedSliceStrokeThickness");
    }
    get selectedSliceOpacity() {
        return this.o;
    }
    set selectedSliceOpacity(a) {
        this.o = a;
        this.e("SelectedSliceOpacity");
    }
    get pixelScalingRatio() {
        return this.n;
    }
    set pixelScalingRatio(a) {
        this.n = a;
        this.e("PixelScalingRatio");
    }
    get actualPixelScalingRatio() {
        return this.l;
    }
    set actualPixelScalingRatio(a) {
        this.l = a;
        this.e("ActualPixelScalingRatio");
    }
    get SliceClickRef() {
        return this._SliceClickRef;
    }
    set SliceClickRef(a) {
        this._SliceClickRef = a;
    }
    get HoleDimensionsChangedRef() {
        return this._HoleDimensionsChangedRef;
    }
    set HoleDimensionsChangedRef(a) {
        this._HoleDimensionsChangedRef = a;
    }
}
DoughnutChartDescription.$t = markType(DoughnutChartDescription, 'DoughnutChartDescription', Description.$);
//# sourceMappingURL=DoughnutChartDescription.js.map