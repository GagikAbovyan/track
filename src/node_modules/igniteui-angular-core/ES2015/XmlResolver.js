//
// System.Xml.XmlResolver.cs
//
// Author:
//   Jason Diamond (jason@injektilo.org)
//   Atsushi Enomoto (atsushi@ximian.com)
//
// (C) 2001 Jason Diamond  http://injektilo.org/
// Copyright (C) 2004,2009 Novell, Inc (http://www.novell.com)
//
import { Base, markType } from "./type";
import { Uri } from "./Uri";
import { ArgumentNullException } from "./ArgumentNullException";
import { InvalidOperationException } from "./InvalidOperationException";
import { stringStartsWith, stringReplace } from "./string";
export class XmlResolver extends Base {
    d(a, b) {
        if (a == null) {
            if (b == null) {
                throw new ArgumentNullException(0, "Either baseUri or relativeUri are required.");
            }
            if (stringStartsWith(b, "http:") || stringStartsWith(b, "https:") || stringStartsWith(b, "ftp:") || stringStartsWith(b, "file:")) {
                return new Uri(0, b);
            }
            throw new InvalidOperationException(1, b + " not supported");
        }
        if (b == null) {
            return a;
        }
        return new Uri(3, a, this.c(b));
    }
    c(a) {
        return stringReplace(stringReplace(stringReplace(stringReplace(stringReplace(a, "<", "%3C"), ">", "%3E"), "#", "%23"), "%", "%25"), "\"", "%22");
    }
}
XmlResolver.$t = markType(XmlResolver, 'XmlResolver');
//# sourceMappingURL=XmlResolver.js.map