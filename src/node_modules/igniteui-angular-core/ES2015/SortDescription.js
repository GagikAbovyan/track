/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, markType } from "./type";
export class SortDescription extends Base {
    constructor(a, ..._rest) {
        super();
        this.a = false;
        this.f = null;
        this.c = 0;
        a = (a == void 0) ? 0 : a;
        switch (a) {
            case 0:
                {
                    let c = _rest[0];
                    this.propertyName = c;
                }
                break;
            case 1:
                {
                    let c = _rest[0];
                    let d = _rest[1];
                    this.propertyName = c;
                    this.direction = d;
                }
                break;
        }
    }
    get propertyName() {
        return this.f;
    }
    set propertyName(a) {
        this.f = a;
    }
    get direction() {
        return this.c;
    }
    set direction(a) {
        this.c = a;
    }
    equals(a) {
        let b = a;
        if (b == null) {
            return super.equals(a);
        }
        return b.propertyName == this.propertyName && b.direction == this.direction;
    }
    getHashCode() {
        return Base.getHashCodeStatic(this.propertyName) * 17 + this.direction;
    }
    h() {
        this.a = true;
    }
}
SortDescription.$t = markType(SortDescription, 'SortDescription');
//# sourceMappingURL=SortDescription.js.map